;; trust theme -- auto generated by type "y" for it
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes (quote ("4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" default)))
 '(session-use-package t nil (session)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


;; set fonts
;; http://www.emacswiki.org/emacs/SetFonts
;;(set-default-font "Monaco-10")
;; Ubuntu setting:文字缩放比例0.9
(set-default-font "Ubuntu Mono-12:bold")

;; set line spacing
(setq-default line-spacing 5)

;; set line number
(global-linum-mode t)


;; set C-tab other-windows
(global-set-key (kbd "<C-tab>") 'other-window) ; Ctrl-TAB


;; Display ido results vertically, rather than horizontally
;(setq ido-decorations (quote ("\n-> " "" "\n   " "\n   ..." "[" "]" " [No match]" " [Matched]" " [Not readable]" " [Too big]" " [Confirm]")))
;(defun ido-disable-line-truncation () (set (make-local-variable 'truncate-lines) nil))
;(add-hook 'ido-minibuffer-setup-hook 'ido-disable-line-truncation)
;(defun ido-define-keys () ;; C-n/p is more intuitive in vertical layout
  ;(define-key ido-completion-map (kbd "C-n") 'ido-next-match)
  ;(define-key ido-completion-map (kbd "C-p") 'ido-prev-match))
;(add-hook 'ido-setup-hook 'ido-define-keys)
